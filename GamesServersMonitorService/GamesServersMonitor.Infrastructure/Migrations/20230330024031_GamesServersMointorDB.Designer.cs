// <auto-generated />
using System;
using GamesServersMonitor.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamesServersMonitor.Infrastructure.Migrations
{
    [DbContext(typeof(GamesMonitorDbContext))]
    [Migration("20230330024031_GamesServersMointorDB")]
    partial class GamesServersMointorDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GamesServersMonitor.Domain.Entities.GameServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("AvgScore")
                        .HasColumnType("real");

                    b.Property<float>("CpuSpeed")
                        .HasColumnType("real");

                    b.Property<float>("CpuTemperature")
                        .HasColumnType("real");

                    b.Property<int>("CurrentPlayers")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("GameMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("HighScore")
                        .HasColumnType("real");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("bit");

                    b.Property<float>("MemoryCapacity")
                        .HasColumnType("real");

                    b.Property<float>("MemoryUsage")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayersCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GameServers");
                });

            modelBuilder.Entity("GamesServersMonitor.Domain.Entities.ServerUpdate", b =>
                {
                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("AvgScore")
                        .HasColumnType("real");

                    b.Property<float>("CpuSpeed")
                        .HasColumnType("real");

                    b.Property<float>("CpuTemperature")
                        .HasColumnType("real");

                    b.Property<int>("CurrentPlayers")
                        .HasColumnType("int");

                    b.Property<float>("HighScore")
                        .HasColumnType("real");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("bit");

                    b.Property<float>("MemoryUsage")
                        .HasColumnType("real");

                    b.HasKey("ServerId", "TimeStamp");

                    b.ToTable("ServerUpdates");
                });
#pragma warning restore 612, 618
        }
    }
}
